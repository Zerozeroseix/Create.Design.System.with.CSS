/* ------------------------------ */
/* Custom properties              */
/* ------------------------------ */

:root {
    /* Para o espaço de flex e grid*/
    /* --gap: 2rem; */


    /* colors */
    --clr-dark: 230 30% 7%;
    --clr-light: 231 77% 90%;
    --clr-white: 0 0% 100%;

    /* font-sizes */
    --fs-900: clamp(5rem, 8vw + 1rem, 9.37rem);
    --fs-800: 3.5rem;
    --fs-700: 1.5rem;
    --fs-600: 1.25rem;
    --fs-500: 1rem;
    --fs-400: 0.9375rem;
    --fs-300: 1rem;
    --fs-200: 0.875rem;

    /* font-families */
    --ff-serif: "Bellefair", serif;
    --ff-sans-cond: "Barlow Condensed", sans-serif;
    --ff-sans-normal: "Barlow", sans-serif;
}

@media (min-width: 35em) {
    :root {
        /* font-sizes */
        --fs-800: 5rem;
        --fs-700: 2.5rem;
        --fs-600: 1.5rem;
        --fs-500: 1.25rem;
        --fs-400: 1rem;
    }
}

@media (min-width: 45em) {
    :root {
        /* font-sizes */
        --fs-800: 6.25rem;
        --fs-700: 3.5rem;
        --fs-600: 2rem;
        --fs-500: 1.75rem;
        --fs-400: 1.125rem;
    }
}








/* ------------------------------ */
/* Reset                          */
/* ------------------------------ */

/* https://piccalil.li/blog/a-modern-css-reset/ */

/* ***MEU*** 
Fazer que funcione o atributo "hidden". Para mais info: https://css-tricks.com/the-hidden-attribute-is-visibly-weak/ 
O problema é causado porque o atributo "hidden" em html é sobreescrito por qualquer configuraçom de "display" em CSS*/
[hidden] {
    display: none !important;
}

/* Box sizing */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Reset margins */
body,
h1,
h2,
h3,
h4,
h5,
p,
figure,
picture {
    margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
    font-weight: 400;
}


/* set up the body */
body {
    font-family: var(--ff-sans-normal);
    font-size: var(--fs-400);
    color: hsl(var(--clr-white));
    background-color: hsl(var(--clr-dark));
    line-height: 1.5;
    /* porque o standard 1.4 dos navegadores é pouco */
    min-height: 100vh;

    display: grid;
    grid-template-rows: min-content 1fr;

    overflow-x: hidden;
}

/* make images easier to work with */
img,
picture {
    max-width: 100%;
    display: block;
}

/* make form elements easier to work with */
input,
button,
textarea,
select {
    font: inherit;
    /*standard é que os form-elements nom herdam a fonte*/
}

/* remove animations for people who've turned them off */
/* Para aquela gente que se molestou em desactivar as animaçons no navegador ou no SO */
@media (prefers-reduced-motion: reduce) {

    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}







/* ------------------------------ */
/* Utility classes                */
/* ------------------------------ */
/* Umha "Utility class" é umha classe que fai umha soa cousa e fai-na bem */

/* general */

/*!!!!!!!!!! TENHO QUE CRIAR UMHA utility class para ocultar os elementos, 
pois o atributo "hidden" directamente declarado em html nom parece funcionar.
Tampouco funciona "display: hidden;"
Porém hai diferenças entre os valores "none" e "hidden". No último o navegador toma em conta o elemeto oculto e renderiza-o. Simplesmente nom é visível.
*/
/* Mais sobre hidden: https://css-tricks.com/the-hidden-attribute-is-visibly-weak/*/
/* .hide,
.hidden {
    display: none;
} */



.flex {
    display: flex;
    /* o valor de "gap" será o que eu vaia estabelecendo em cada classe que esteja dentro da classe/elemento "flex" */
    gap: var(--gap, 1rem);
}


.grid {
    display: grid;
    /* o valor de "gap" será o que eu vaia estabelecendo em cada classe/elemento que esteja dentro da classe "grid" */
    gap: var(--gap, 1rem);
}



.display-block {
    display: block;
}

/* !!! p selector " *+*  " selecciona os elementos que tenham ANTES um irmám */
/* Outro selector que fai o mesmo é " *:not(:first-child)  " que selecciona todos os filhos excepto o primeiro  */
.flow>*:where(:not(:first-child)) {
    /* o valor de "margin-top" será o que eu vaia estabelecendo em cada classe/elemento que esteja dentro da classe "flow" */
    margin-top: var(--flow-space, 1rem);
    /* outline: 1px solid red; */
}

.flow--space-small {
    --flow-space: .5rem;
}

.container {
    /* border: 1px red solid; */
    /* margin: 2rem; */
    padding-inline: 2em;
    /* padding-inline: NOVA propriedade CSS que calcula o eixo inline da caixa ou contentor e cria o padding direita-esquerda e nom o arriba-abaixo 
    O seu comportamento é igual a "padding: 0 2em" */
    margin-inline: auto;
    /* NOVA propriedade se similar comportamento a padding-inline*/
    max-width: 80rem;
}



.sr-only {
    /* UTILIDADE "screen reader only". Só para tecnologias de assitência que lem as páginas para alguém */
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    /* added line*/
    border: 0;
}

.skip-to-content {
    /*UTILIDADE para os usuários que se movam mediante teclado. Dá a oportunidade de que vaian direitamente ao botóm EXPLORE sem passar polo MENU*/
    /* neste caso position:absoluto permitem que os demais eleemntos nom se vejam afectados posicionalmente com "skip-to-content" */
    position: absolute;
    z-index: 9999;
    background: hsl(var(--clr-white));
    color: hsl(var(--clr-dark));
    padding: .5em 1em;
    margin-inline: auto;
    transform: translateY(-100%);
    transition: transform 250ms ease-in;



}

.skip-to-content:focus {
    transform: translateY(0%);
    transition: transform 250ms ease-out;
}


/* colors */
.bg-dark {
    background-color: hsl(var(--clr-dark));
}

.bg-accent {
    background-color: hsl(var(--clr-light));
}

.bg-white {
    background-color: hsl(var(--clr-white));
}

.text-dark {
    color: hsl(var(--clr-dark));
}

.text-accent {
    color: hsl(var(--clr-light));
}

.text-white {
    color: hsl(var(--clr-white));
}

.example-component {
    background-color: hsl(var(--clr-light) / .2);
}

/* typography */
/* Typo font-family*/
.ff-serif {
    font-family: var(--ff-serif);
}

.ff-sans-cond {
    font-family: var(--ff-sans-cond);
}

.ff-sans-normal {
    font-family: var(--ff-sans-normal);
}

/* Typo letter-spacing */
.letter-spacing-1 {
    letter-spacing: 4.75px;
}

.letter-spacing-2 {
    letter-spacing: 2.7px;
}

.letter-spacing-3 {
    letter-spacing: 2.35px;
}

/* Typo uppercase */
.uppercase {
    text-transform: uppercase;
}

/* Typo font-size */
.fs-900 {
    font-size: var(--fs-900);
}

.fs-800 {
    font-size: var(--fs-800);
}

.fs-700 {
    font-size: var(--fs-700);
}

.fs-600 {
    font-size: var(--fs-600);
}

.fs-500 {
    font-size: var(--fs-500);
}

.fs-400 {
    font-size: var(--fs-400);
}

.fs-300 {
    font-size: var(--fs-300);
}

.fs-200 {
    font-size: var(--fs-200);
}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
    line-height: 1.1;
}

/* titles */
.numbered-title {
    font-family: var(--ff-sans-cond);
    font-size: var(--fs-500);
    text-transform: uppercase;
    letter-spacing: 4.72px;
}

.numbered-title span {
    margin-right: .5em;
    font-weight: 700;
    color: hsl(var(--clr-white) / .25);
    letter-spacing: 1px;
}




/* ------------------------------ */
/* Components                     */
/* ------------------------------ */

.large-button {
    font-size: 2rem;
    position: relative;
    display: inline-grid;
    z-index: 1;
    place-items: center;
    padding: 0 2em;
    border-radius: 50%;
    aspect-ratio: 1 / 1;
    /*aspect-ratio-> ideal para criar quadrados ou rectangulos */
    text-decoration: none;
}

.large-button::after {
    content: "";
    position: absolute;
    z-index: -1;
    background: hsl(var(--clr-white) / .15);
    width: 100%;
    height: 100%;
    border-radius: 50%;
    opacity: 0;
    transition: opacity 500ms linear, transform 750ms ease-in-out;
}

.large-button:hover::after,
.large-button:focus::after {
    opacity: 1;
    transform: scale(1.5);
}



/* primary-header*/

.logo {
    margin: 1.5rem clamp(1.5rem, 5vw, 3.5rem);
}

.primary-header {
    justify-content: space-between;
    align-items: center;
}

.primary-navigation {
    /* Neste caso si funciona clamp asignado a umha variável */
    --gap: clamp(1.5rem, 7vw, 3.5rem);
    /* --gap: 3rem; */
    --underline-gap: 2rem;
    list-style: none;
    padding: 0;
    margin: 0;
    background: hsl(var(--clr-dark) / 0.95);
    /* box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37); */
    /* border: 1px solid rgba(255, 255, 255, 0.18); */
}

.primary-navigation a {
    text-decoration: none;
}

.primary-navigation a>span {
    font-weight: 700;
    margin-right: .5em;
}

.mobile-nav-toggle {
    display: none;
}


/* Esta regra @ ("at") outorga a habilidade de realizar consultas que comprovem se certas funcionalidades estám disponíveis. 
Neste caso queremos comprovar se a propriedade "backdrop-filter" é suportada polo navegador.
Em caso negativo, o estilo será o predeterminado no elemento ou classe
Em caso positivo, aplicara-se os estilos determinados dentro da regra: backdrop-filter: blur(1.5rem); 

Neste exemplo, FIREFOX tomará o estilo predeterminado. Os demais navegadores aplicarám o backdrop-filter:blur*/
@supports(backdrop-filter: blur(1.5rem)) {
    .primary-navigation {
        background: hsl(var(--clr-dark) / 0.05);
        backdrop-filter: blur(1.5rem);
    }
}

@media (max-width: 35rem) {
    .primary-navigation {
        --underline-gap: .5rem;
        position: fixed;
        z-index: 1000;
        /* inset fixa as posiçons Enriba-Direita-Embaixo-Esquerda dum elemento. Neste caso ordena que o elemento se desprace um 20% desde a esquerda */
        inset: 0 0 0 30%;
        list-style: none;
        padding: min(20rem, 15vh) 2rem;
        margin: 0;
        flex-direction: column;
        transform: translateX(100%);
        transition: transform 500ms ease-in-out;
    }

    /* se o atributo "data-visible" (cujo valor controlamos com JS) é "true", o MENU lateral aparece*/
    .primary-navigation[data-visible="true"] {
        transform: translateX(0);
    }

    .primary-navigation.underline-indicators>.active {
        border: 0;
    }

    .mobile-nav-toggle {
        display: block;
        position: absolute;
        z-index: 2000;
        right: 1rem;
        top: 2rem;
        background: transparent;
        background-image: url(./assets/shared/icon-hamburger.svg);
        background-repeat: no-repeat;
        background-position: center;
        width: 1.5rem;
        aspect-ratio: 1/1;
        border: 0;
    }

    .mobile-nav-toggle[aria-expanded="true"] {
        background-image: url(./assets/shared/icon-close.svg);
    }

    /*Para os usuários que abram o menu co teclado, podemos criar um bordo visível.
    Usamos o pseudo-elemento focus-visible, de maneira que saibam que tenhem o botom seleccionado.
    O interessante desta soluçom é que o borde nom se activa se usamos o cursor ou o dedo */
    .mobile-nav-toggle:focus-visible {
        outline: 5px solid hsl(var(--clr-white) / .75);
        outline-offset: 5px;
    }
}

@media (min-width: 35em) {
    .primary-navigation {
        padding-inline: clamp(3rem, 5vw, 7rem);
    }
}

@media (min-width: 35em) and (max-width: 44.999em) {
    .primary-navigation a>span {
        display: none;
    }
}

@media (min-width: 45em) {

    .primary-header::after {
        content: "";
        display: block;
        position: relative;
        height: 1px;
        width: 100%;
        margin-right: -2.5rem;
        background: hsl(var(--clr-white) / .25);
        order: 1;
    }

    nav {
        order: 2;
    }

    .primary-navigation {
        margin-block: 2rem;
    }
}


.underline-indicators>* {
    cursor: pointer;
    padding: var(--underline-gap, 0.5rem) 0;
    border: 0;
    border-bottom: .2rem solid hsl(var(--clr-white) / 0);
    background-color: transparent;
}

.underline-indicators>*:hover,
.underline-indicators>*:focus {
    border-color: hsl(var(--clr-white) / .5);
}

.underline-indicators>.active,
.underline-indicators>[aria-selected="true"] {
    color: hsl(var(--clr-white) / 1);
    border-color: hsl(var(--clr-white) / 1);
}

.tab-list {
    --gap: 2rem;
}

.dot-indicators>* {
    cursor: pointer;
    border: 0;
    aspect-ratio: 1 / 1;
    border-radius: 50%;
    padding: .5em;
    background-color: hsl(var(--clr-white) / .25);
}

.dot-indicators>*:hover,
.dot-indicators>*:focus {
    background-color: hsl(var(--clr-white) / .5);
}

.dot-indicators>[aria-selected="true"] {
    background-color: hsl(var(--clr-white) / 1);
}

.number-indicators>* {
    display: grid;
    place-items: center;
    aspect-ratio: 1 / 1;
    cursor: pointer;
    border-radius: 50%;
    padding: 0 1em;
    border-color: hsl(var(--clr-white) / .25);
}

.number-indicators>*:hover,
.number-indicators>*:focus {
    border-color: hsl(var(--clr-white) / .75);
}

.number-indicators>.active,
.number-indicators>[aria-selected="true"] {
    color: hsl(var(--clr-dark));
    background-color: hsl(var(--clr-white) / 1);
}

/* ---------------------------------------- */
/* Page specific background                 */
/* ---------------------------------------- */

body {
    background-size: cover;
    background-position: bottom center;
}


/* home */
.home {
    background-image: url(./assets/home/background-home-mobile.jpg);
}

@media (min-width: 35em) {
    .home {
        background-position: center center;
        background-image: url(./assets/home/background-home-tablet.jpg);
    }
}

@media (min-width: 45em) {
    .home {
        background-image: url(./assets/home/background-home-desktop.jpg);
    }
}

/* destination */
.destination {
    background-image: url(./assets/destination/background-destination-mobile.jpg);
}

@media (min-width: 35em) {
    .destination {
        background-position: center center;
        background-image: url(./assets/destination/background-destination-tablet.jpg);
    }
}

@media (min-width: 45em) {
    .destination {
        background-image: url(./assets/destination/background-destination-desktop.jpg);
    }
}

/* crew */
.crew {
    background-image: url(./assets/crew/background-crew-mobile.jpg);
}

@media (min-width: 35em) {
    .crew {
        background-position: center center;
        background-image: url(./assets/crew/background-crew-tablet.jpg);
    }
}

@media (min-width: 45em) {
    .crew {
        background-image: url(./assets/crew/background-crew-desktop.jpg);
    }
}



/* ---------------------------------------- */
/* Layout                                   */
/* ---------------------------------------- */


.grid-container {
    /* border: 5px solid green; */
    display: grid;
    place-items: center;
    text-align: center;
    padding-inline: 1rem;
    padding-bottom: 4rem;
}


.grid-container p:not([class]) {
    /* A unidade ch	é relativa ao ancho do carácter "0" (zero)
    O que estamos declarando é que o ancho máximo de <p> seja de 50 caracteres "0", o que o fai mais legível.
    */
    max-width: 50ch;
}

.numbered-title {
    grid-area: title;
}

/* ***MEU*** 

Plano de HOME 

(!!!!! necessário para centrar os elementos do primeiro "div" do .grid-container--home, que contem a frase "SO, YOU WANT TO TRAVEL TO SPACE*/

/*!!!!!!!!!!!!!!!!!!!!! 
Finalmente nom é necessária esta declaraçom porque o "problema" de centrado se soluciona aplicando o "max-width: 50ch;" em ".grid-container > *" só aos elementos <p> que nom tenham assignada classe nengumha.
!!!!!!!!!!!!!!!!!!!!!!!!*/

/* .grid-container--home>div:first-child {
    display: flex;
    flex-direction: column;
    align-items: center;
} */

/* Destination layout */

.grid-container--destination {
    --flow-space: 2rem;
    grid-template-areas:
        'title'
        'image'
        'tabs'
        'content';
}

.grid-container--destination>picture {
    grid-area: image;
    max-width: 60%;
    align-self: start;
}

.grid-container--destination>.tab-list {
    grid-area: tabs;
}

.grid-container--destination>.destination-info {
    grid-area: content;
}

.destination-meta {
    flex-direction: column;
    border-top: 1px solid hsl(var(--clr-white) / .25);
    padding-top: 2.5rem;
    margin-top: 2.5rem;
}

.destination-meta p {
    font-size: 1.75rem;
}

/* crew layout */
.grid-container--crew {
    grid-template-areas:
        'title'
        'image'
        'tabs'
        'content'
    ;
}

.grid-container--crew>picture {
    grid-area: image;
    max-width: 60%;
    border-bottom: 1px solid hsl(var(--clr-white) / .25);
}

.grid-container--crew>.dot-indicators {
    grid-area: tabs;
}

.grid-container--crew>.crew-details {
    grid-area: content;
    display: grid;
    justify-items: center;
}

.crew-details h2 {
    color: hsl(var(--clr-white) / .5);
}

.crew-details>p:nth-child(3) {
    color: hsl(var(--clr-white) / .75);
}

/* technology layout */

.grid-container--technology {
    padding-inline: 0;
    --flow-space: 2rem;
    grid-template-areas:
        'title'
        'image'
        'tabs'
        'content';
}

.grid-container--technology>picture {
    grid-area: image;
    max-width: 100%;
    align-self: start;
}

.grid-container--technology>.number-indicators {
    grid-area: tabs;
}

.grid-container--technology>.technology-info {
    grid-area: content;
}

.technology-info h2 {
    color: hsl(var(--clr-light));
}




@media (min-width: 35em) {
    .numbered-title {
        justify-self: start;
        margin-top: 2rem;
    }

    .destination-meta {
        flex-direction: row;
        justify-content: space-evenly;
        border-top: 1px solid hsl(var(--clr-white) / .25);
        padding-top: 2.5rem;
        margin-top: 2.5rem;
    }

    /* crew layout */
    .grid-container--crew {
        padding-bottom: 0;
        grid-template-areas:
            'title'
            'content'
            'tabs'
            'image'
        ;
    }

    /* technology layout */
    .grid-container .numbered-title {
        padding-inline-start: 1rem;
    }

    .grid-container--technology .number-indicators {
        --flow-space: 3rem;
    }
}


@media (min-width: 45em) {
    .grid-container {
        column-gap: var(--container-gap, 2rem);
        grid-template-columns: minmax(2rem, 1fr) repeat(2, minmax(0, 40rem)) minmax(2rem, 1fr);
    }

    .grid-container--home>*:first-child {
        /* outline: 1px solid red; */
        grid-column: 2;
    }

    .grid-container--home>*:last-child {
        /* outline: 1px solid yellow; */
        grid-column: 3;
    }

    .grid-container--home {
        /*a funçom max(1,2) toma o maior dos dous valores*/
        padding-bottom: max(6rem, 20vh);
        align-items: end;
    }

    .grid-container--destination {
        text-align: start;
        align-content: start;
        justify-items: start;
        grid-template-areas:
            '. title title .'
            '. image tabs .'
            '. image content .';
    }

    .grid-container--destination picture {
        max-width: 90%;
    }

    .destination-meta {
        /* min() ordena que se escolha o valor mais baixo: seja o 6% do viewport ou 6rem*/
        --gap: min(6vw, 6rem);
        justify-content: start;
    }

    /* crew layout */
    .grid-container--crew {
        grid-template-columns: minmax(1rem, 1fr) minmax(0, 40rem) minmax(0, 20rem) minmax(1rem, 1fr);
        text-align: start;
        grid-template-areas:
            '. title title .'
            '. content image .'
            '. tabs image .'
        ;
    }

    .grid-container--crew>.crew-details {
        justify-self: start;
        justify-items: start;
    }

    .grid-container--crew .dot-indicators {
        justify-self: start;
    }

    .grid-container--crew picture {
        grid-column: span 2;
        align-self: end;
        max-width: 90%;
    }


    /* technology layout */
    .grid-container--technology {
        padding-inline-end: 0;
        grid-template-columns: minmax(2rem, 1fr) minmax(8rem, 1fr) minmax(0, 40rem) repeat(2, minmax(0, 30rem));
        text-align: start;
        grid-template-areas:
            '. title title . .'
            '. tabs content image image'
            '. tabs content image image'
        ;
    }

    .grid-container--technology>* {
        outline: 1px solid limegreen;
    }

    .grid-container--technology>.technology-info {
        align-self: center;
        justify-self: center;
        justify-items: center;
    }

    .grid-container--technology .number-indicators {
        flex-direction: column;
        justify-self: start;
    }

    .grid-container--technology picture {
        /* grid-column: span 2; */
        align-self: start;
        justify-self: end;
        /* align-self: end; */
        max-width: 100%;
    }
}